<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_chfa_amps.AMPSScriptInclude</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description>General Script Include for AMPS Application</description>
        <name>AMPSScriptInclude</name>
        <script><![CDATA[var AMPSScriptInclude = Class.create();
AMPSScriptInclude.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
	generateHardwareCheckList: function(){
		var sys_id = this.getParameter('sysparm_sysid');
		var replace = '';
		var count =0;
		var gr = new GlideRecord('x_chfa_amps_hardware_checklist');
		gr.addEncodedQuery('parent='+sys_id);
		gr.query();
		while(gr.next()){
			replace = gr.getValue('replace');
			if(replace == null)
				count++;
		}
		if(count>0)
			return 'Error';
		else if(count == 0){
		
			var gr1 = new GlideRecord('x_chfa_amps_purchase_order');
			gr1.initialize();
			gr1.addEncodedQuery('parent='+sys_id);
			gr1.query();
			if(gr1.next())
				return 'Purchase Order already present';
			else{
				gr1.setValue('parent',sys_id);
				gr1.insert();
			//	return 'Success';
			//	return gr1.getDisplayValue('number');
				return gr1.getUniqueValue();
			}
			
		}
		
			
	},
	
	_load : function(/* Data Source */ source, /* Transform Map */ mapName, /* Delete Transform Map */ cleanMap) {
          var sourceGr = new GlideRecord('sys_data_source');
          sourceGr.addQuery('name', source);
          sourceGr.query();
          // if we have our data source continue
          if(!sourceGr.next()) {
       //      gs.print('Did not find Data Source ' + source);
             return;
          }

          var map = new GlideRecord('sys_transform_map');
          map.addQuery('name', mapName);
          map.query();
          // if we have a map we can now load and run the transform
          if(!map.next()) {
       //      gs.print('Did not find Transform map ' + mapName);
             return;
          }
    
      //    gs.print('Loading Import Set ' + source);
          var loader = new GlideImportSetLoader();
          var importSetGr = loader.getImportSetGr(sourceGr);
          var ranload = loader.loadImportSetTable(importSetGr, sourceGr);

          if(!ranload) {
       //      gs.print('Failed to load import set ' + source);
             return;
          }

       //   gs.print('Running Transform map ' + map.name);
          var t = new GlideImportSetTransformer();
          t.setMapID(map.sys_id);
          t.transformAllMaps(importSetGr);
          
    },
    type: 'AMPSScriptInclude'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>sandeep.gunnam</sys_created_by>
        <sys_created_on>2017-03-28 16:54:11</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>c44d7a1513b53640d9c75d322244b09d</sys_id>
        <sys_mod_count>16</sys_mod_count>
        <sys_name>AMPSScriptInclude</sys_name>
        <sys_package display_value="AMPS" source="x_chfa_amps">06092f3613d5f200d9c75d322244b022</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="AMPS">06092f3613d5f200d9c75d322244b022</sys_scope>
        <sys_update_name>sys_script_include_c44d7a1513b53640d9c75d322244b09d</sys_update_name>
        <sys_updated_by>sandeep.gunnam</sys_updated_by>
        <sys_updated_on>2017-03-31 17:19:05</sys_updated_on>
    </sys_script_include>
</record_update>

<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sysevent_in_email_action">
    <sysevent_in_email_action action="INSERT_OR_UPDATE">
        <action>record_action</action>
        <active>true</active>
        <assignment_operator/>
        <condition_script/>
        <description/>
        <event_name>email.read</event_name>
        <filter_condition table="sys_email">subjectLIKETest PO Notification^EQ<item endquery="false" field="subject" goto="false" newquery="false" operator="LIKE" or="false" value="Test PO Notification"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <from/>
        <name>Update Purchase Order</name>
        <order>0</order>
        <reply_email/>
        <required_roles/>
        <script><![CDATA[(function runAction(/*GlideRecord*/ current, /*GlideRecord*/ event, /*EmailWrapper*/ email, /*ScopedEmailLogger*/ logger, /*EmailClassifier*/ classifier) {  
	
	var gdt = new GlideDateTime();
	current.setValue('received',gdt.getValue());
	current.update();
      
    var importSetTableName = "u_update_purchase_order";  
    var transformMapID = "43e1318d13f9b240d9c75d322244b02b";  
    var datasource = "cb861ac413353240d9c75d322244b056";  
      
    attachtoDataSource();
	function attachtoDataSource(){
		var gr= new GlideRecord('sys_attachment');
		gr.addEncodedQuery('table_sys_idLIKE'+datasource);
		gr.query();
		//To check if data source has an attachment. This is to avoid collision when multiple emails are reaching ServiceNow to update Hardware Checklist
		if(gr.next()){
			attachtoDataSource();
		}
		else{
			var gr1 = new GlideRecord('sys_data_source');
			gr1.addEncodedQuery('sys_id=cb861ac413353240d9c75d322244b056');
			gr1.query();
			if(gr1.next()){
				//Copying the attachment from email to the data source and the current record
				GlideSysAttachment.copy('sys_email', sys_email.sys_id, 'sys_data_source', datasource);
			}
		}
	}
	
	var run = new global.DataSourceLoader();
	run._load('Update Purchase Order','Update Purchase Order',false); 
//	GlideSysAttachment.copy('sys_data_source',datasource,'x_chfa_amps_purchase_order',current.sys_id);
	
	var gr = new GlideRecord('sys_attachment');
	gr.addEncodedQuery('table_sys_id=cb861ac413353240d9c75d322244b056');
	gr.query();
	if(gr.next()){
		gr.deleteRecord();
	}
      
    /* 
     * Schedule Load of Attachment 
     * 
     * This inbound email action will generate an import data source, however the attachment isn't copied to the data source until 
     * after the insert of the record.  Scheduling the import to happen 30 seconds later so that attachment has time to be copied. 
     */  
  //  new global.EmailFileImportUtils().scheduleImport(dataSourceID, transformMapID);  
      
})(current, event, email, logger, classifier);  




/* 
*  Inbound email action script for processing Attachments sent via Email. 
*  Attaches to a data source, then runs a scheduled import against it. 
*/
  
//Settings - Update the data source with the appropriate SYS ID that has the Transform Map we want to use. 
/*
var dataSourceSysId = 'cb861ac413353240d9c75d322244b056'; 
var validAttachments = ['application/vnd.ms-excel','text/csv']; 
  
//-----Do not need to change anything below this----- 
//Query for the sys_email record (incoming email) that contains the attachment and attach to data source 
var grEmailLog = new GlideRecord('sys_email'); 
grEmailLog.addQuery('uid', email.uid); 
grEmailLog.orderByDesc('sys_created_on'); 
grEmailLog.query(); 
  
if (grEmailLog.next()) { 
    var processor = new AttachmentImportProcessor(grEmailLog, dataSourceSysId); 
    processor.setAttachmentTypes(validAttachments); 
    processor.processAttachments(); 
} */]]></script>
        <stop_processing>true</stop_processing>
        <sys_class_name>sysevent_in_email_action</sys_class_name>
        <sys_created_by>sandeep.gunnam</sys_created_by>
        <sys_created_on>2017-03-24 16:52:55</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>1ed78e4c13f13240d9c75d322244b0f7</sys_id>
        <sys_mod_count>12</sys_mod_count>
        <sys_name>Update Purchase Order</sys_name>
        <sys_overrides/>
        <sys_package display_value="AMPS" source="x_chfa_amps">06092f3613d5f200d9c75d322244b022</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="AMPS">06092f3613d5f200d9c75d322244b022</sys_scope>
        <sys_update_name>sysevent_in_email_action_1ed78e4c13f13240d9c75d322244b0f7</sys_update_name>
        <sys_updated_by>sandeep.gunnam</sys_updated_by>
        <sys_updated_on>2017-04-03 12:31:05</sys_updated_on>
        <table>x_chfa_amps_purchase_order</table>
        <template/>
        <type>reply</type>
    </sysevent_in_email_action>
</record_update>
